/* Autogenerated by mkopti.pl xcf2pnm */
#define XCF2PNM
#define OPTI_TARGET "xcf2pnm"
#define XCF2FOO
#define OPTIONGROUP(a,b)
#ifdef HAVE_GETOPT_LONG
static const struct option longopts[] = {
	{ "help", 0, 0, 'h'},
	{ "version", 0, 0, 'V'},
	{ "verbose", 0, 0, 'v'},
	{ "bzip", 0, 0, 'j'},
	{ "gzip", 0, 0, 'z'},
	{ "unpack", 1, 0, 'Z'},
	{ "output", 1, 0, 'o'},
	{ "alpha", 1, 0, 'a'},
	{ "background", 1, 0, 'b'},
	{ "force-alpha", 0, 0, 'A'},
	{ "color", 0, 0, 'c'},
	{ "colour", 0, 0, 'c'},
	{ "gray", 0, 0, 'g'},
	{ "grey", 0, 0, 'g'},
	{ "mono", 0, 0, 'm'},
	{ "pnm", 0, 0, 'n'},
	{ "truecolor", 0, 0, 'T'},
	{ "for-gif", 0, 0, 'G'},
	{ "dissolve", 0, 0, 'D'},
	{ "full-image", 0, 0, 'f'},
	{ "size", 1, 0, 'S'},
	{ "offset", 1, 0, 'O'},
	{ "autocrop", 0, 0, 'C'},
	{ "mode", 1, 0, 300},
	{ "percent", 1, 0, 301},
	{ "opacity", 1, 0, 302},
	{ "mask", 0, 0, 303},
	{ "nomask", 0, 0, 304},
	{ "utf8", 0, 0, 'u'},
{0}};
#define LONGALT(s) " (" s ")"
#else
#define LONGALT(s) ""
#endif
static void
opt_usage(FILE *f)
{
  int i = 2;
  int j;
  j=strlen(_("color"))+3; if( j>i ) i=j;
  j=strlen(_("command"))+3; if( j>i ) i=j;
  j=strlen(_("filename"))+3; if( j>i ) i=j;
  j=strlen(_("mode"))+7; if( j>i ) i=j;
  j=strlen(_("n"))+10; if( j>i ) i=j;
  j=strlen(_("wxh"))+3; if( j>i ) i=j;
  j=strlen(_("x,y"))+3; if( j>i ) i=j;
  fprintf(f,"  -h%-*s %s" LONGALT("--help") "\n",i-2,"",
    _("show this message"));
  fprintf(f,"  -V%-*s %s" LONGALT("--version") "\n",i-2,"",
    _("show version"));
  fprintf(f,"  -v%-*s %s" LONGALT("--verbose") "\n",i-2,"",
    _("show progress messages"));
  fprintf(f,"  -j%-*s %s" LONGALT("--bzip") "\n",i-2,"",
    _("input is bzip2 compressed"));
  fprintf(f,"  -z%-*s %s" LONGALT("--gzip") "\n",i-2,"",
    _("input is gzip compressed"));
  fprintf(f,"  -Z %-*s %s" LONGALT("--unpack") "\n",i-3,_("command"),
    _("use 'command' to decompress input"));
  fprintf(f,"  -o %-*s %s" LONGALT("--output") "\n",i-3,_("filename"),
    _("name output file"));
  fprintf(f,"  -a %-*s %s" LONGALT("--alpha") "\n",i-3,_("filename"),
    _("write transparency map"));
  fprintf(f,"  -b %-*s %s" LONGALT("--background") "\n",i-3,_("color"),
    _("select background color"));
  fprintf(f,"  -A%-*s %s" LONGALT("--force-alpha") "\n",i-2,"",
    _("force alpha channel in output"));
  fprintf(f,"  -c%-*s %s" LONGALT("--color") "\n",i-2,"",
    _("select color output"));
  fprintf(f,"  -g%-*s %s" LONGALT("--gray") "\n",i-2,"",
    _("select grayscale output"));
  fprintf(f,"  -m%-*s %s" LONGALT("--mono") "\n",i-2,"",
    _("select monochrome output"));
  fprintf(f,"  -n%-*s %s" LONGALT("--pnm") "\n",i-2,"",
    _("select -c/-g/-m by image contents"));
  fprintf(f,"  -T%-*s %s" LONGALT("--truecolor") "\n",i-2,"",
    _("treat indexed images as RGB for flattening"));
  fprintf(f,"  -G%-*s %s" LONGALT("--for-gif") "\n",i-2,"",
    _("disallow partial transparency"));
  fprintf(f,"  -D%-*s %s" LONGALT("--dissolve") "\n",i-2,"",
    _("dissolve partial transparency"));
  fprintf(f,"  -f%-*s %s" LONGALT("--full-image") "\n",i-2,"",
    _("flatten to memory; then analyse"));
  fprintf(f,"  -S %-*s %s" LONGALT("--size") "\n",i-3,_("wxh"),
    _("crop image while converting"));
  fprintf(f,"  -O %-*s %s" LONGALT("--offset") "\n",i-3,_("x,y"),
    _("translate converted part of image"));
  fprintf(f,"  -C%-*s %s" LONGALT("--autocrop") "\n",i-2,"",
    _("autocrop to visible layer boundaries"));
  fprintf(f,"%s:\n",_("Layer-selection options"));
  fprintf(f,"  --mode %-*s %s\n",i-7,_("mode"),
    _("set layer mode"));
  fprintf(f,"  --percent %-*s %s\n",i-10,_("n"),
    _("set opacity in percent"));
  fprintf(f,"  --opacity %-*s %s\n",i-10,_("n"),
    _("set opacity in 1/255 units"));
  fprintf(f,"  --mask%-*s %s\n",i-6,"",
    _("enable layer mask"));
  fprintf(f,"  --nomask%-*s %s\n",i-8,"",
    _("disable layer mask"));
  fprintf(f,"  -u%-*s %s" LONGALT("--utf8") "\n",i-2,"",
    _("use UTF-8 for layer names"));
}
#undef LONGALT
#define OPTSTRING "hVvjzZ:o:a:b:AcgmnTGDfS:O:Cu"
